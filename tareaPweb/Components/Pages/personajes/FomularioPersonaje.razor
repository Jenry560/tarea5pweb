@page "/personaje-form/{Id:int?}"
@page "/personaje-detalles/{Id:int?}"
@rendermode InteractiveServer
@using tareaPweb.Data
@inject AppDbContext context
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using tareaPweb.models

<div class="form-container">
    <div class="card mb-3">
        <div class="card-header">
            <h3>@(@Id > 0 ? "Editar Personaje" : "Agregar Personaje")</h3>
        </div>
        <div class="card-body">

            <EditForm Model="nuevoPersonaje" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="nombre" class="form-label">Nombre</label>
                    <InputText id="nombre" class="form-control" @bind-Value="nuevoPersonaje.Nombre" required
                        disabled="@detalle" />
                </div>

                <div class="mb-3">
                    <label for="alias" class="form-label">Alias (Opcional)</label>
                    <InputText id="alias" class="form-control" @bind-Value="nuevoPersonaje.Alias" disabled="@detalle" />
                </div>

                <div class="mb-3">
                    <label for="rol" class="form-label">Rol en el juego</label>
                    <InputText id="rol" class="form-control" @bind-Value="nuevoPersonaje.Rol" required
                        disabled="@detalle" />
                </div>

                <div class="mb-3">
                    <label for="habilidadEspecial" class="form-label">Habilidad Especial (Opcional)</label>
                    <InputText id="habilidadEspecial" class="form-control"
                        @bind-Value="nuevoPersonaje.HabilidadEspecial" disabled="@detalle" />
                </div>

                <div class="mb-3">
                    <label for="armaFavorita" class="form-label">Arma Favorita (Opcional)</label>
                    <InputText id="armaFavorita" class="form-control" @bind-Value="nuevoPersonaje.ArmaFavorita"
                        disabled="@detalle" />
                </div>

                <div class="mb-3">
                    <label for="nivelPoder" class="form-label">Nivel de Poder (1-100)</label>
                    <InputNumber id="nivelPoder" class="form-control" @bind-Value="nuevoPersonaje.NivelPoder" min="1"
                        max="100" required disabled="@detalle" />
                </div>

                <div class="mb-3">
                    <label for="imagenPersonaje" class="form-label">Imagen del Personaje (URL)</label>
                    <InputText id="imagenPersonaje" class="form-control" @bind-Value="nuevoPersonaje.ImagenPersonaje"
                        disabled="@detalle" />
                </div>
                @if (!detalle)
                {
                    <button type="submit" class="btn btn-primary">Guardar Personaje</button>

                }
            </EditForm>

        </div>
    </div>
</div>



@code {
    [Parameter] public int? Id { get; set; }

    private Personaje nuevoPersonaje = new Personaje();
    bool detalle = false;


    protected override async Task OnInitializedAsync()
    {

        if (Id > 0)
        {
            var personajeExistente = await context.Personajes.FindAsync(Id);
            if (personajeExistente == null)
            {
                NavigationManager.NavigateTo("/personajes");
            }
            else
            {
                nuevoPersonaje = personajeExistente;
                if (NavigationManager.Uri.Contains("/personaje-detalles"))
                {
                    detalle = true;
                }
            }
        }

    }

    private void Guardar()
    {

        if (Id > 0)
        {
            context.Personajes.Update(nuevoPersonaje);

        }
        else
        {
            context.Personajes.Add(nuevoPersonaje);
        }

        context.SaveChanges();
        NavigationManager.NavigateTo("/personajes");
    }
}