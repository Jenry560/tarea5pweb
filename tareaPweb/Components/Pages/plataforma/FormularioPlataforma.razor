@page "/plataforma-form/{Id:int?}"
@using tareaPweb.models
@rendermode InteractiveServer



<div class="form-container">

    <div class="card">
        <div class="card-header">
            <h3>Agregar Plataforma</h3>
        </div>
        <div class="card-body">
            <EditForm Model="nuevaPlataforma" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="nombre" class="form-label">Nombre de la Plataforma</label>
                    <InputText id="nombre" class="form-control" @bind-Value="nuevaPlataforma.Nombre" required />
                </div>

                <div class="mb-3">
                    <label for="estado" class="form-label">Estado</label>
                    <InputCheckbox id="estado" class="form-check-input" @bind-Value="nuevaPlataforma.Estado" />
                    <label class="form-check-label" for="estado">
                        Activada
                    </label>
                </div>

                <button type="submit" class="btn btn-primary">Guardar Plataforma</button>
            </EditForm>
        </div>
    </div>
</div>


@code {
    [Parameter] public int? Id { get; set; }
    private Plataforma nuevaPlataforma = new Plataforma();


    protected override async Task OnInitializedAsync()
    {

        if (Id > 0)
        {
            @* var personajeExistente = await DbContext.Personajes.FindAsync(Id);
if (personajeExistente == null)
{
Navigation.NavigateTo("/personajes");
}
else
{
personaje = personajeExistente;
var seriePersonaje = await DbContext.Series.FindAsync(personaje.SerieId);
personaje.Series = seriePersonaje ?? new Series();
} *@
        }

    }

    private void Guardar()
    {
        // LÃ³gica para guardar la plataforma
        Console.WriteLine("Plataforma guardada");
    }
}
