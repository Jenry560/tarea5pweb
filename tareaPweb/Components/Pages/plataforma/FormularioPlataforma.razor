@page "/plataforma-form/{Id:int?}"
@page "/plataforma-detalles/{Id:int?}"

@using tareaPweb.Data
@using tareaPweb.models
@inject AppDbContext context
@inject NavigationManager Navigation
@rendermode InteractiveServer




<div class="form-container">

    <div class="card">
        <div class="card-header">
            <h3>@(@Id > 0 ? "Editar Plataforma" : "Agregar Plataforma")</h3>
        </div>
        <div class="card-body">
            <EditForm Model="nuevaPlataforma" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="nombre" class="form-label">Nombre de la Plataforma</label>
                    <InputText id="nombre" class="form-control" @bind-Value="nuevaPlataforma.Nombre" required
                        disabled="@detalle" />
                </div>

                <div class=" mb-3">
                    <InputCheckbox id="estado" class="form-check-input" @bind-Value="nuevaPlataforma.Estado"
                        disabled="@detalle" />
                    <label class="form-check-label" for="estado">
                        Activada
                    </label>
                </div>
                @if (!detalle)
                {
                    <button type="submit" class="btn btn-primary">Guardar Plataforma</button>
                }
            </EditForm>
        </div>
    </div>
</div>


@code {
    [Parameter] public int? Id { get; set; }
    private Plataforma nuevaPlataforma = new Plataforma();
    bool detalle = false;


    protected override async Task OnInitializedAsync()
    {

        if (Id > 0)
        {
            var plataformaExistente = await context.Plataformas.FindAsync(Id);
            if (plataformaExistente == null)
            {
                Navigation.NavigateTo("/plataformas");
            }
            else
            {
                nuevaPlataforma = plataformaExistente;
                if (Navigation.Uri.Contains("/plataforma-detalles"))
                {
                    detalle = true;
                }
            }
        }

    }

    private async Task Guardar()
    {
        if (Id > 0)
        {
            context.Plataformas.Update(nuevaPlataforma);

        }
        else
        {
            context.Plataformas.Add(nuevaPlataforma);

        }
        await context.SaveChangesAsync();
        Navigation.NavigateTo("/plataformas");
    }
}
